type: install
jpsVersion: 7.1.1
id: wp-edition-standalone-pro-migration-JE-65509
categories:
  - wordpress
targetEditions: wordpress
name: Standalone Pro Migration
baseUrl: https://github.com/jelastic-jps/wordpress-edition/blob/JE-65509
logo: /images/logo/standalone-pro.svg
description:
  text: /text/standalone-pro.md    
  short: Single instance powered by LiteSpeed
  
onBeforeInit: /scripts/onBeforeInit.js

settings:
  fields:
  - caption: Advanced Features
    type: displayfield
    name: displayfield
    markup:

  - caption: WordPress Brute Force Attack Protection
    type: checkbox
    name: wp_protect
    value: true
    disabled: false
    tooltip: "Secure WordPress Admin Panel with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:config:wordpress-protection' target='_blank'>LiteSpeed Brute Force Protection</a> that limits failed login attempts. Default action is <b>Throttle</b> and number of allowed attempts is <b>100</b>"

  - caption: Web Application Firewall
    type: checkbox
    name: waf
    value: true
    disabled: false
    tooltip: "Protect web sites with <a href='https://www.litespeedtech.com/support/wiki/doku.php/litespeed_wiki:waf' target='_blank'>LiteSpeed built-in WAF</a> based on Free ModSecurity Rules from Comodo"

  - caption: Install Let's Encrypt SSL with Auto-Renewal
    type: checkbox
    name: le-addon
    value: true
    disabled: false
    tooltip: "Advanced integration with Let's Encrypt certificate authority that simplifies and automates the process of issuing, configuring and updating trusted custom SSL certificates."

  - caption: Install Lightning-Fast Premium CDN
    type: checkbox
    name: cdn-addon
    value: true
    disabled: false
    tooltip: "Jelastic CDN is an HTTP/3 premium content delivery network of 160+ Super PoPs (points of presence) with bandwidth capacity up to 115 Tbps, advanced caching and acceleration strategies based on best-in-class IP Anycast technology."

  - type: displayfield
    hideLabel: true
    hidden: true
    name: bl_count   
    markup:
    
  - type: separator
    
  - caption: Topology
    type: displayfield
    name: topology
    tooltip: "<h2 align=center>Single instance powered by<br>LiteSpeed Web Server</h2><br><img width='214' height='340' src='https://raw.githubusercontent.com/jelastic-jps/wordpress-edition/master/images/topo/standalone-pro.svg?sanitize=true'><br>"
    
  - type: envname
    name: envName
    caption: Environment
    dependsOn: region
    required: true

  - type: string
    name: displayName
    caption: Display Name
    default: Standalone Pro

  - caption: Region
    type: regionlist
    name: region
    disableInactive: true
    selectFirstAvailable: true
    stateId: "wp"
    dependsOn: ownerUid
   
  - type: owner
    name: ownerUid
    caption: Owner

globals:
  wp_jps: https://raw.githubusercontent.com/sych74/wordpress/JE-65509
  wp_admin_pass: ${fn.password(10)}
  db_user: user-${fn.random}
  db_pass: ${fn.password(10)}

onInstall:
  - script: /scripts/setGlobals.js?_r=${fn.random}

  - install:
      jps: ${globals.wp_jps}/manifest.yml?_r=${fn.random}
      envName: ${settings.envName}
      region: ${settings.region}
      loggerName: ${settings.envName}
      displayName: ${settings.displayName}
      envGroups: ${globals.envGroups}
      ownerUid: ${settings.ownerUid}
      settings:
        ls-addon: true
        waf: ${settings.waf:true}
        wp_protect: ${settings.wp_protect:true}
        le-addon: ${settings.le-addon:true}
        cdn-addon: ${settings.cdn-addon:false}
        mu-addon: false
        woocommerce: false
        DB_USER: ${globals.db_user}
        DB_PASS: ${globals.db_pass}
        WP_ADMIN_PASS: ${globals.wp_admin_pass}
        success_email: false
        project: ${settings.project:default}
        projectScope: ${settings.projectScope:production}
        php_engine: ${settings.php_engine:php8.2}
        cloudlets: ${settings.cloudlets:16}
        diskspace: ${settings.diskspace:[quota.disk.limitation]}

  - setGlobals:
      installationId: ${response.uniqueName}

  - env.control.ApplyNodeGroupData[cp]:
      envName: ${settings.envName}
      data:
        fixedTopologyLayers: 1

  - if ('${settings.success_email}' != 'false'):
    - return:
        type: success
        message: /success/text/standalone-pro.md?_r=${fn.random}
        email: /success/email/standalone-pro.md?_r=${fn.random}

onApplySubscriptionSettings:
  marketplace.installation.ExecuteAction:
    appUniqueName: ${globals.installationId}
    action: applyEnvSettings
    settings:
      targetAppid: ${event.params.targetAppid}
      cloudlets: ${event.params.settings.cloudlets}
      diskspace: ${event.params.settings.diskspace}000
